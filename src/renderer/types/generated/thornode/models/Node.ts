// tslint:disable
/**
 * Thornode API
 * Thornode REST API.
 *
 * The version of the OpenAPI document: 1.97.2
 * Contact: devs@thorchain.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    ChainHeight,
    NodeBondProviders,
    NodeJail,
    NodePreflightStatus,
    NodePubKeySet,
} from './';

/**
 * @export
 * @interface Node
 */
export interface Node {
    /**
     * @type {string}
     * @memberof Node
     */
    node_address: string;
    /**
     * @type {string}
     * @memberof Node
     */
    status: NodeStatusEnum;
    /**
     * @type {NodePubKeySet}
     * @memberof Node
     */
    pub_key_set: NodePubKeySet;
    /**
     * the consensus pub key for the node
     * @type {string}
     * @memberof Node
     */
    validator_cons_pub_key: string;
    /**
     * current node bond
     * @type {string}
     * @memberof Node
     */
    bond: string;
    /**
     * the block height at which the node became active
     * @type {number}
     * @memberof Node
     */
    active_block_height: number;
    /**
     * @type {string}
     * @memberof Node
     */
    bond_address: string;
    /**
     * the block height of the current provided information for the node
     * @type {number}
     * @memberof Node
     */
    status_since: number;
    /**
     * the set of vault public keys of which the node is a member
     * @type {Array<string>}
     * @memberof Node
     */
    signer_membership: Array<string>;
    /**
     * @type {boolean}
     * @memberof Node
     */
    requested_to_leave: boolean;
    /**
     * indicates whether the node has been forced to leave by the network, typically via ban
     * @type {boolean}
     * @memberof Node
     */
    forced_to_leave: boolean;
    /**
     * @type {number}
     * @memberof Node
     */
    leave_height: number;
    /**
     * @type {string}
     * @memberof Node
     */
    ip_address: string;
    /**
     * the currently set version of the node
     * @type {string}
     * @memberof Node
     */
    version: string;
    /**
     * the accumlated slash points, reset at churn but excessive slash points may carry over
     * @type {number}
     * @memberof Node
     */
    slash_points: number;
    /**
     * @type {NodeJail}
     * @memberof Node
     */
    jail: NodeJail;
    /**
     * @type {string}
     * @memberof Node
     */
    current_award: string;
    /**
     * the last observed heights for all chain by the node
     * @type {Array<ChainHeight>}
     * @memberof Node
     */
    observe_chains: Array<ChainHeight>;
    /**
     * @type {NodePreflightStatus}
     * @memberof Node
     */
    preflight_status: NodePreflightStatus;
    /**
     * @type {NodeBondProviders}
     * @memberof Node
     */
    bond_providers: NodeBondProviders;
}

/**
 * @export
 * @enum {string}
 */
export enum NodeStatusEnum {
    Active = 'Active',
    Whitelisted = 'Whitelisted',
    Standby = 'Standby',
    Disabled = 'Disabled'
}

