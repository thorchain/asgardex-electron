// tslint:disable
/**
 * Thornode API
 * Thornode REST API.
 *
 * The version of the OpenAPI document: 1.103.0
 * Contact: devs@thorchain.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpQuery, throwIfNullOrUndefined, encodeURI } from '../runtime';
import {
    Node,
} from '../models';

export interface NodeRequest {
    address: string;
    height?: number;
}

export interface NodesRequest {
    height?: number;
}

/**
 * no description
 */
export class NodesApi extends BaseAPI {

    /**
     * Returns node information for the provided node address.
     */
    node = ({ address, height }: NodeRequest): Observable<Node> => {
        throwIfNullOrUndefined(address, 'node');

        const query: HttpQuery = {};

        if (height != null) { query['height'] = height; }

        return this.request<Node>({
            path: '/thorchain/node/{address}'.replace('{address}', encodeURI(address)),
            method: 'GET',
            query,
        });
    };

    /**
     * Returns node information for all registered validators.
     */
    nodes = ({ height }: NodesRequest): Observable<Array<Node>> => {

        const query: HttpQuery = {};

        if (height != null) { query['height'] = height; }

        return this.request<Array<Node>>({
            path: '/thorchain/nodes',
            method: 'GET',
            query,
        });
    };

}
