// tslint:disable
/**
 * Thornode API
 * Thornode REST API.
 *
 * The version of the OpenAPI document: 1.100.0
 * Contact: devs@thorchain.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpQuery, throwIfNullOrUndefined, encodeURI } from '../runtime';
import {
    LiquidityProvider,
} from '../models';

export interface SaverRequest {
    asset: string;
    address: string;
    height?: number;
}

export interface SaversRequest {
    asset: string;
    height?: number;
}

/**
 * no description
 */
export class SaversApi extends BaseAPI {

    /**
     * Returns the saver position given then savers pool and address.
     */
    saver = ({ asset, address, height }: SaverRequest): Observable<Array<LiquidityProvider>> => {
        throwIfNullOrUndefined(asset, 'saver');
        throwIfNullOrUndefined(address, 'saver');

        const query: HttpQuery = {};

        if (height != null) { query['height'] = height; }

        return this.request<Array<LiquidityProvider>>({
            path: '/thorchain/pool/{asset}/saver/{address}'.replace('{asset}', encodeURI(asset)).replace('{address}', encodeURI(address)),
            method: 'GET',
            query,
        });
    };

    /**
     * Returns all savers for the savers pool.
     */
    savers = ({ asset, height }: SaversRequest): Observable<Array<LiquidityProvider>> => {
        throwIfNullOrUndefined(asset, 'savers');

        const query: HttpQuery = {};

        if (height != null) { query['height'] = height; }

        return this.request<Array<LiquidityProvider>>({
            path: '/thorchain/pool/{asset}/savers'.replace('{asset}', encodeURI(asset)),
            method: 'GET',
            query,
        });
    };

}
