// tslint:disable
/**
 * Midgard Public API
 * The Midgard Public API queries THORChain and any chains linked via the Bifr√∂st and prepares information about the network to be readily available for public users. The API parses transaction event data from THORChain and stores them in a time-series database to make time-dependent queries easy. Midgard does not hold critical information. To interact with BEPSwap and Asgardex, users should query THORChain directly.
 *
 * The version of the OpenAPI document: 2.5.15
 * Contact: devs@thorchain.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * @export
 * @interface TVLHistoryItem
 */
export interface TVLHistoryItem {
    /**
     * Int64, The end time of bucket in unix timestamp
     * @type {string}
     * @memberof TVLHistoryItem
     */
    endTime: string;
    /**
     * Float, the price of Rune based on the deepest USD pool at the end of the interval. 
     * @type {string}
     * @memberof TVLHistoryItem
     */
    runePriceUSD: string;
    /**
     * Int64, The beginning time of bucket in unix timestamp
     * @type {string}
     * @memberof TVLHistoryItem
     */
    startTime: string;
    /**
     * Int64(e8), the total amount of bonds (both active and standby) at the end of the interval
     * @type {string}
     * @memberof TVLHistoryItem
     */
    totalValueBonded?: string;
    /**
     * Int64(e8), total value locked in the chain (in rune) This equals `totalPooledValue + totalBondedValue`, as it combines the liquidity pools and bonds of the nodes. 
     * @type {string}
     * @memberof TVLHistoryItem
     */
    totalValueLocked?: string;
    /**
     * Int64(e8) in rune, the total pooled value (both assets and rune) in all of the pools at the end of the interval Note: this is twice the aggregate Rune depth of all pools. 
     * @type {string}
     * @memberof TVLHistoryItem
     */
    totalValuePooled: string;
}
