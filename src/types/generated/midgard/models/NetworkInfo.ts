// tslint:disable
/**
 * Midgard Public API
 * The Midgard Public API queries THORChain and any chains linked via the Bifr√∂st and prepares information about the network to be readily available for public users. The API parses transaction event data from THORChain and stores them in a time-series database to make time-dependent queries easy. Midgard does not hold critical information. To interact with BEPSwap and Asgardex, users should query THORChain directly.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * Contact: devs@thorchain.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    BlockRewards,
    BondMetrics,
} from './';

/**
 * @export
 * @interface NetworkInfo
 */
export interface NetworkInfo {
    /**
     * Array of Active Bonds
     * @type {Array<string>}
     * @memberof NetworkInfo
     */
    activeBonds?: Array<string>;
    /**
     * Number of Active Nodes
     * @type {number}
     * @memberof NetworkInfo
     */
    activeNodeCount?: number;
    /**
     * @type {BlockRewards}
     * @memberof NetworkInfo
     */
    blockRewards?: BlockRewards;
    /**
     * @type {BondMetrics}
     * @memberof NetworkInfo
     */
    bondMetrics?: BondMetrics;
    /**
     * @type {string}
     * @memberof NetworkInfo
     */
    bondingROI?: string;
    /**
     * @type {string}
     * @memberof NetworkInfo
     */
    nextChurnHeight?: string;
    /**
     * The remaining time of pool activation (in seconds)
     * @type {number}
     * @memberof NetworkInfo
     */
    poolActivationCountdown?: number;
    /**
     * @type {string}
     * @memberof NetworkInfo
     */
    poolShareFactor?: string;
    /**
     * @type {string}
     * @memberof NetworkInfo
     */
    stakingROI?: string;
    /**
     * Array of Standby Bonds
     * @type {Array<string>}
     * @memberof NetworkInfo
     */
    standbyBonds?: Array<string>;
    /**
     * Number of Standby Nodes
     * @type {number}
     * @memberof NetworkInfo
     */
    standbyNodeCount?: number;
    /**
     * Total left in Reserve
     * @type {string}
     * @memberof NetworkInfo
     */
    totalReserve?: string;
    /**
     * Total Rune Staked in Pools
     * @type {string}
     * @memberof NetworkInfo
     */
    totalStaked?: string;
}
