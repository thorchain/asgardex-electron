// tslint:disable
/**
 * Midgard Public API
 * The Midgard Public API queries THORChain and any chains linked via the Bifr√∂st and prepares information about the network to be readily available for public users. The API parses transaction event data from THORChain and stores them in a time-series database to make time-dependent queries easy. Midgard does not hold critical information. To interact with BEPSwap and Asgardex, users should query THORChain directly.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * Contact: devs@thorchain.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * @export
 * @interface StakersAssetData
 */
export interface StakersAssetData {
    /**
     * @type {string}
     * @memberof StakersAssetData
     */
    asset?: string;
    /**
     * Value of Assets earned from the pool.
     * @type {string}
     * @memberof StakersAssetData
     */
    assetEarned?: string;
    /**
     * ROI of the Asset side
     * @type {string}
     * @memberof StakersAssetData
     */
    assetROI?: string;
    /**
     * Amount of Assets staked.
     * @type {string}
     * @memberof StakersAssetData
     */
    assetStaked?: string;
    /**
     * @type {number}
     * @memberof StakersAssetData
     */
    dateFirstStaked?: number;
    /**
     * @type {number}
     * @memberof StakersAssetData
     */
    heightLastStaked?: number;
    /**
     * Total value of earnings (in RUNE).
     * @type {string}
     * @memberof StakersAssetData
     */
    poolEarned?: string;
    /**
     * Average ROI (in RUNE) of both sides
     * @type {string}
     * @memberof StakersAssetData
     */
    poolROI?: string;
    /**
     * RUNE value staked.
     * @type {string}
     * @memberof StakersAssetData
     */
    poolStaked?: string;
    /**
     * Value of RUNE earned from the pool.
     * @type {string}
     * @memberof StakersAssetData
     */
    runeEarned?: string;
    /**
     * ROI of the Rune side.
     * @type {string}
     * @memberof StakersAssetData
     */
    runeROI?: string;
    /**
     * Amount of RUNE staked.
     * @type {string}
     * @memberof StakersAssetData
     */
    runeStaked?: string;
    /**
     * Represents ownership of a pool.
     * @type {string}
     * @memberof StakersAssetData
     */
    stakeUnits?: string;
}
